//  Source: lemmy/crates/db_views/src/structs.rs
// Code generated by go.elara.ws/go-lemmy/cmd/gen (struct generator). DO NOT EDIT.

package types

type CommentReportView struct {
	CommentReport              CommentReport     `json:"comment_report" url:"comment_report,omitempty"`
	Comment                    Comment           `json:"comment" url:"comment,omitempty"`
	Post                       Post              `json:"post" url:"post,omitempty"`
	Community                  Community         `json:"community" url:"community,omitempty"`
	Creator                    Person            `json:"creator" url:"creator,omitempty"`
	CommentCreator             Person            `json:"comment_creator" url:"comment_creator,omitempty"`
	Counts                     CommentAggregates `json:"counts" url:"counts,omitempty"`
	CreatorBannedFromCommunity bool              `json:"creator_banned_from_community" url:"creator_banned_from_community,omitempty"`
	MyVote                     Optional[int16]   `json:"my_vote" url:"my_vote,omitempty"`
	Resolver                   Optional[Person]  `json:"resolver" url:"resolver,omitempty"`
}
type CommentView struct {
	Comment                    Comment           `json:"comment" url:"comment,omitempty"`
	Creator                    Person            `json:"creator" url:"creator,omitempty"`
	Post                       Post              `json:"post" url:"post,omitempty"`
	Community                  Community         `json:"community" url:"community,omitempty"`
	Counts                     CommentAggregates `json:"counts" url:"counts,omitempty"`
	CreatorBannedFromCommunity bool              `json:"creator_banned_from_community" url:"creator_banned_from_community,omitempty"`
	Subscribed                 SubscribedType    `json:"subscribed" url:"subscribed,omitempty"`
	Saved                      bool              `json:"saved" url:"saved,omitempty"`
	CreatorBlocked             bool              `json:"creator_blocked" url:"creator_blocked,omitempty"`
	MyVote                     Optional[int16]   `json:"my_vote" url:"my_vote,omitempty"`
}
type LocalUserView struct {
	LocalUser LocalUser        `json:"local_user" url:"local_user,omitempty"`
	Person    Person           `json:"person" url:"person,omitempty"`
	Counts    PersonAggregates `json:"counts" url:"counts,omitempty"`
}
type PostReportView struct {
	PostReport                 PostReport       `json:"post_report" url:"post_report,omitempty"`
	Post                       Post             `json:"post" url:"post,omitempty"`
	Community                  Community        `json:"community" url:"community,omitempty"`
	Creator                    Person           `json:"creator" url:"creator,omitempty"`
	PostCreator                Person           `json:"post_creator" url:"post_creator,omitempty"`
	CreatorBannedFromCommunity bool             `json:"creator_banned_from_community" url:"creator_banned_from_community,omitempty"`
	MyVote                     Optional[int16]  `json:"my_vote" url:"my_vote,omitempty"`
	Counts                     PostAggregates   `json:"counts" url:"counts,omitempty"`
	Resolver                   Optional[Person] `json:"resolver" url:"resolver,omitempty"`
}
type PostView struct {
	Post                       Post            `json:"post" url:"post,omitempty"`
	Creator                    Person          `json:"creator" url:"creator,omitempty"`
	Community                  Community       `json:"community" url:"community,omitempty"`
	CreatorBannedFromCommunity bool            `json:"creator_banned_from_community" url:"creator_banned_from_community,omitempty"`
	Counts                     PostAggregates  `json:"counts" url:"counts,omitempty"`
	Subscribed                 SubscribedType  `json:"subscribed" url:"subscribed,omitempty"`
	Saved                      bool            `json:"saved" url:"saved,omitempty"`
	Read                       bool            `json:"read" url:"read,omitempty"`
	CreatorBlocked             bool            `json:"creator_blocked" url:"creator_blocked,omitempty"`
	MyVote                     Optional[int16] `json:"my_vote" url:"my_vote,omitempty"`
	UnreadComments             int64           `json:"unread_comments" url:"unread_comments,omitempty"`
}
type PrivateMessageView struct {
	PrivateMessage PrivateMessage `json:"private_message" url:"private_message,omitempty"`
	Creator        Person         `json:"creator" url:"creator,omitempty"`
	Recipient      Person         `json:"recipient" url:"recipient,omitempty"`
}
type PrivateMessageReportView struct {
	PrivateMessageReport  PrivateMessageReport `json:"private_message_report" url:"private_message_report,omitempty"`
	PrivateMessage        PrivateMessage       `json:"private_message" url:"private_message,omitempty"`
	PrivateMessageCreator Person               `json:"private_message_creator" url:"private_message_creator,omitempty"`
	Creator               Person               `json:"creator" url:"creator,omitempty"`
	Resolver              Optional[Person]     `json:"resolver" url:"resolver,omitempty"`
}
type RegistrationApplicationView struct {
	RegistrationApplication RegistrationApplication `json:"registration_application" url:"registration_application,omitempty"`
	CreatorLocalUser        LocalUser               `json:"creator_local_user" url:"creator_local_user,omitempty"`
	Creator                 Person                  `json:"creator" url:"creator,omitempty"`
	Admin                   Optional[Person]        `json:"admin" url:"admin,omitempty"`
}
type SiteView struct {
	Site               Site               `json:"site" url:"site,omitempty"`
	LocalSite          LocalSite          `json:"local_site" url:"local_site,omitempty"`
	LocalSiteRateLimit LocalSiteRateLimit `json:"local_site_rate_limit" url:"local_site_rate_limit,omitempty"`
	Counts             SiteAggregates     `json:"counts" url:"counts,omitempty"`
}
type CustomEmojiView struct {
	CustomEmoji CustomEmoji          `json:"custom_emoji" url:"custom_emoji,omitempty"`
	Keywords    []CustomEmojiKeyword `json:"keywords" url:"keywords,omitempty"`
}
